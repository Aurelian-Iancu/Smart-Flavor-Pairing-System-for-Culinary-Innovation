@model Backend.Models.Pager
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<div class="container">
    @if (Model.TotalPages > 0)
    {
        <ul class="pagination justify-content-end">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Recipe" asp-action="Index" asp-route-pg="1">First</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Recipe" asp-action="Index" asp-route-pg="@(Model.CurrentPage - 1)">Previous</a>
                </li>
            }

            @for (var page = Model.StartPage; page <= Model.EndPage; page++)
            {
                <li class="page-item @(page == Model.CurrentPage ? "active" : "")">
                    <a class="page-link" asp-controller="Recipe" asp-action="Index" asp-route-pg="@(page)">@(page)</a>
                </li>
            }

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" asp-controller="Recipe" asp-action="Index" asp-route-pg="@(Model.CurrentPage + 1)">Next</a>
                </li>
                <li class="page-item">
                    <a class="page-link" asp-controller="Recipe" asp-action="Index" asp-route-pg="@(Model.TotalPages)">Last</a>
                </li>
            }
        </ul>
    }
</div>

<style>
    .pagination .page-link {
        color: #1ABC9C;
    }

    .pagination .page-item.active .page-link {
        background-color: #1ABC9C;
        border-color: #1ABC9C;
    }

    .pagination .page-item .page-link:hover {
        background-color: #16A085;
        border-color: #16A085;
    }
</style>